image: ghcr.io/prefix-dev/pixi:0.44.0

variables:
  FF_USE_FASTZIP: "true"
  CACHE_COMPRESSION_LEVEL: "fastest"

default:
  before_script:
    # Workaround for https://github.com/prefix-dev/pixi/issues/2923
    - pixi global install git

run tests:
  variables:
    GIT_STRATEGY: clone
  parallel:
    matrix:
      - PIXI_ENV:
        - "mid"
        - "latest"
  script:
    - pixi run -e $PIXI_ENV tests
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .pixi

run coverage:
  extends: run tests
  parallel: null
  variables:
    PIXI_ENV: "minimal"
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    paths:
      - htmlcov
    reports:
      junit: junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

run docs:
  script:
    - pixi install -e docs  # Attempt to fix the weird cache issue
    - pixi run docs-build
  artifacts:
    paths:
      - docs/build
  cache:
    key: "$CI_JOB_NAME"
    paths:
        - .pixi

run pre-commit:
  variables:
    PRE_COMMIT_HOME: $CI_PROJECT_DIR/.pre-commit-cache
  script:
    - pixi run -e precommit git config --global --add safe.directory $CI_PROJECT_DIR
    - pixi run pre-commit run --all-files
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .pre-commit-cache
      - .pixi

paper:
  image: gitlab.kwant-project.org:5005/qt/research-docker
  when: manual
  before_script: []
  script:
    - pip install -e .
    - cd paper/code_figures
    - jupytext --to ipynb --execute *.py
    - cd ../figures
    - for image in *.svg; do
    - inkscape --batch-process -o "${image%.*}.pdf" $image
    - done
    - cd ..
    - sed -i -e "s/\\\usepackage{minted}/\\\usepackage\[finalizecache,cachedir=minted-cache\]{minted}/g" paper.tex
    - for tex in *.tex; do
    - if grep "documentclass" $tex >/dev/null; then
    - latexmk -pdf $tex -shell-escape
    - fi
    - done
  artifacts:
    paths:
      - paper/paper.pdf
      - paper/figures/*.pdf
      - paper/*.bbl
      - paper/minted-cache/*

pages:
  before_script: []
  needs:
    - run coverage
    - run docs
    # - paper  # Disabled after finishing the manuscript
  script:
    - mkdir public
    - cp -r htmlcov public/
    - cp -r docs/build public/
    # - cp -r paper/ public/
  artifacts:
    paths:
      - public

prepare zips:
  image: gitlab.kwant-project.org:5005/qt/research-docker
  before_script: []
  when: manual
  needs: [paper]
  script:
    - zip -r zenodo.zip *
    - cd paper
    - sed -i -e "s/\\\today/$(date +'%B %e, %Y')/g" *.tex
    - sed -i -e "s/\\\usepackage{minted}/\\\usepackage\[frozencache,cachedir=minted-cache\]{minted}/g" paper.tex
    - zip ../arxiv.zip *.tex *.bbl figures/*.pdf *.cls *.bst minted-cache/*
  artifacts:
    paths:
      - arxiv.zip
      - zenodo.zip

publish to test pypi:
  needs:
    - run tests
    - run coverage
    - run docs
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+.*\+test$/' # vX.Y.Z.post1+test
  script:
    - pixi run build
    - pixi run publish -a $PYPI_TEST_TOKEN -r test
  cache:
    key: "$CI_JOB_NAME"
    paths:
        - .pixi

publish to pypi:
  needs:
    - run tests
    - run coverage
    - run docs
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+[^+]*$/' # No +test
  script:
    - pixi run build
    - pixi run publish -a $PYPI_TOKEN
  cache:
    key: "$CI_JOB_NAME"
    paths:
        - .pixi
